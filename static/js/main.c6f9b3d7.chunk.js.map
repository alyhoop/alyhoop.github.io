{"version":3,"sources":["Components/Navbar.jsx","Components/Header.jsx","Components/Portfolio.jsx","Components/Contact.jsx","Components/Error.jsx","Components/Footer.jsx","app.js","serviceWorker.js","index.js"],"names":["Navbar","Nav","className","Item","to","Component","Header","Portfolio","CardDeck","Card","style","flex","backgroundColor","Img","variant","src","Body","Title","Text","href","Button","Contact","props","submitForm","bind","state","status","this","Container","Row","onSubmit","action","method","type","name","placeholder","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","Error","Footer","Col","icon","faEnvelope","size","id","faStackOverflow","faGalacticSenate","faGithub","faLinkedin","faFile","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c6f9b3d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <Nav className=\"navbar justify-content-end fixed-top\">\n        <Nav.Item className=\"navbar-item\">\n          <Link to=\"/\" className=\"navbar-link\">Home</Link>\n        </Nav.Item>\n        <Nav.Item className=\"navbar-item\">\n          <Link to=\"/Portfolio\" className=\"navbar-link\">Portfolio</Link>\n        </Nav.Item>\n        <Nav.Item className=\"navbar-item\">\n          <Link to=\"/Contact\" className=\"navbar-link\">Contact</Link>\n        </Nav.Item>\n      </Nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n     render(){\n       return (\n         <div className=\"landing flex row justify-content-center\" >\n           <div className=\"title row\">\n             <p>\n               Alyssa Hooper\n             </p>\n           </div>\n           <div className=\"job row\">\n             <p>\n               lifelong learner; aspiring junior developer\n             </p>\n           </div>\n         </div>\n    );\n  }\n}\n\n\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Card, Button, CardDeck } from 'react-bootstrap';\n\nclass Portfolio extends Component {\n  render(){\n    return(\n      <div className=\"portfolio\">\n        <CardDeck>\n        <Card style={{flex:1, backgroundColor:'#495057ff'}}>\n          <Card.Img\n            variant=\"top\"\n            src=\"./Portfolio.jpg\"\n          />\n          <Card.Body>\n            <Card.Title>Portfolio</Card.Title>\n            <Card.Text>\n              <p>\n                My role: Creator\n              </p>\n              <p>\n                Problem: Wanting a responsive, modern website to display my progress.\n              </p>\n              <p>\n                Solution: Researched top-rated designs on Dribbble and\n                implemented a minimalist inspired page to demonstrate competency\n                using responsive design techniques.\n              </p>\n              <div className=\"button flex-container\">\n              <a href=\"https://github.com/alyhoop/my-portfolio\">\n                <Button\n                  style={{backgroundColor:'#343a40ff'}}\n                  variant=\"secondary\"\n                  className=\"button-1\"\n                >\n                  Code\n                </Button>\n              </a>\n              </div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card style={{flex:1, backgroundColor:'#495057ff'}}>\n          <Card.Img\n            className=\"img\"\n            variant=\"top\"\n            src=\"./Business.jpg\"\n          />\n          <Card.Body>\n            <Card.Title>Business Page Reformat</Card.Title>\n            <Card.Text>\n            <p>\n              My role: Contributor\n            </p>\n            <p>\n              Problem: About me section needed to be reformatted.\n            </p>\n            <p>\n              Solution: Bootstrap was used to dynamically re-style this page. Hard\n              coding values was avoided to accomodate varying viewports and this\n              library was already in use on this website.\n            </p>\n            <div className=\"button flex-container\">\n            <a href=\"http://www.shskincare.com/\">\n              <Button\n                style={{backgroundColor:'#343a40ff'}}\n                variant=\"secondary\"\n                className=\"button-2\">\n                Project\n              </Button>\n            </a>\n            <a href=\"https://github.com/shskincare/shskincare.github.io\">\n              <Button\n                style={{backgroundColor:'#343a40ff'}}\n                variant=\"secondary\"\n                className=\"button-2\">\n                Code\n              </Button>\n            </a>\n            </div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card style={{flex:1, backgroundColor:'#495057ff'}}>\n          <Card.Img\n            variant=\"top\"\n            src=\"./list.jpg\"\n          />\n          <Card.Body>\n            <Card.Title>Modern List</Card.Title>\n            <Card.Text>\n            <p>\n              My role: Creator\n            </p>\n            <p>\n              Problem: Creating a styled list\n            </p>\n            <p>\n              Solution: I used Dribbble inspired styling for a modern check list,\n              that dynamically greets the user based on time of day.\n            </p>\n            <div className=\"button flex-container\">\n            <a href=\"https://github.com/alyhoop/project-3\">\n              <Button\n                style={{backgroundColor:'#343a40ff'}}\n                variant=\"secondary\"\n                className=\"button-3\">\n                Code\n              </Button>\n            </a>\n            </div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card style={{flex:1, backgroundColor:'#495057ff'}}>\n          <Card.Img\n            variant=\"top\"\n            src=\"./Menu.jpg\"\n          />\n          <Card.Body>\n            <Card.Title>Menu Concept</Card.Title>\n            <Card.Text>\n              <p>\n                My role: Creator\n              </p>\n              <p>\n                Problem: Designing an asthetically pleasing menu concept to study\n                CSS Grid.\n              </p>\n              <p>\n                Solution: CSS Grid and Icons were used to style an organized\n                menu.\n              </p>\n              <div className=\"button flex-container\">\n              <a href=\"https://codepen.io/alyhoop/pen/BaKrqEL\">\n                <Button\n                  style={{backgroundColor:'#343a40ff'}}\n                  variant=\"secondary\"\n                  className=\"button-5\"\n                >\n                  Project\n                </Button>\n              </a>\n              <a href=\"https://github.com/alyhoop/practice-scripts/tree/master/CSS%20Grid\">\n                <Button\n                  style={{backgroundColor:'#343a40ff'}}\n                  variant=\"secondary\"\n                  className=\"button-4\"\n                >\n                  Code\n                </Button>\n              </a>\n              </div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        </CardDeck>\n      </div>\n    );\n  }\n}\n\n\nexport default Portfolio;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <Container className=\"contact-container\">\n        <Row className=\"contact-container-row-form\">\n          <form\n              onSubmit={this.submitForm}\n              action=\"https://formspree.io/meqrydly\"\n              method=\"POST\"\n            >\n            <label>Your Email:</label>\n            <input type=\"email\" name=\"email\" />\n            <label>Subject:</label>\n            <input type=\"text\" name=\"subject\" />\n            <label>Your Message:</label>\n            <input type=\"text\" name=\"message\" placeholder=\"Write something...\" className=\"input-message\"/>\n            {status === \"SUCCESS\" ? <p>Thanks!</p> : <button className=\"contact-container-row-button\">Submit</button>}\n            {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n          </form>\n        </Row>\n      </Container>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}\n","import React, { Component, Link } from 'react';\n\n\nclass Error extends Component {\n  render(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Page Not Found</h1>\n\t\t\t\t<p>Sorry, there is nothing to see here.</p>\n\t\t\t\t<p><Link to=\"/\">Back to Home</Link></p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\nexport default Error;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFile, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub, faLinkedin, faStackOverflow, faGalacticSenate } from '@fortawesome/free-brands-svg-icons';\n\nclass Footer extends Component {\n     render(){\n       return (\n         <span className=\"contact\">\n          <Container className=\"footer-container fixed-bottom\">\n            <Row>\n              <Col className=\"footer-container-col\">\n                 <FontAwesomeIcon\n                   icon={faEnvelope}\n                   size=\"1x\"\n                   id=\"icon email-icon\"\n                 />\n                 <a className=\"icon-text\" href=\"mailto:alyssavladahooper@gmail.com\">alyssavladahooper@gmail.com</a>\n                 <FontAwesomeIcon\n                   icon={faStackOverflow}\n                   size=\"1x\"\n                   id=\"icon so-icon\"\n                 />\n                 <a href=\"https://stackoverflow.com/users/13789454/alyssa-hooper\" className=\"icon-text\">My StackOverflow</a>\n                 <FontAwesomeIcon\n                   icon={faGalacticSenate}\n                   size=\"1x\"\n                   id=\"icon galactic-icon\"\n                 />\n                 <a href=\"https://www.codewars.com/users/alyhoop\" className=\"icon-text\">My Codewars</a>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"footer-container-col\">\n                 <span className=\"contact-github\">\n                   <a href=\"https://github.com/alyhoop\">\n                     <FontAwesomeIcon\n                       icon={faGithub}\n                       size=\"2x\"\n                       id=\"github\"\n                     />\n                   </a>\n                 </span>\n                 <span className=\"contact-linkedin\">\n                   <a href=\"https://www.linkedin.com/in/alyssa-hooper-300b6818a/\">\n                     <FontAwesomeIcon\n                       icon={faLinkedin}\n                       size=\"2x\"\n                       id=\"linkedin\"\n                     />\n                   </a>\n                 </span>\n                 <span className=\"contact-resume\">\n                   <a href=\"./ResumeAHooper.pdf\">\n                     <FontAwesomeIcon\n                       icon={faFile}\n                       size=\"2x\"\n                       id=\"resume\"\n                     />\n                   </a>\n                 </span>\n               </Col>\n             </Row>\n            </Container>\n        </span>\n    );\n  }\n}\n\n\n\n\nexport default Footer;\n","import React from \"react\"\n\nimport './SCSS/index.scss';\n\nimport Navbar from './Components/Navbar';\nimport Header from './Components/Header';\nimport Portfolio from './Components/Portfolio';\nimport Contact from './Components/Contact';\nimport Error from './Components/Error';\nimport Footer from './Components/Footer';\nimport { Route, Switch } from 'react-router-dom'\n\nfunction App() {\n    return (\n        <main>\n            <Navbar />\n            <Switch>\n                <Route path=\"/\" component={Header} exact />\n                <Route path=\"/Portfolio\" component={Portfolio} />\n                <Route path=\"/Contact\" component={Contact} />\n                <Route component={Error} />\n            </Switch>\n            <Footer />\n        </main>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport App from './app';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}